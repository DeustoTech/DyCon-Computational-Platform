

dt = 0.1;      % Here, we can give the time step manually.
odeEqn = ode(symF,symTh,symU,'InitialCondition',Th_init,'FinalTime',T,'dt',dt);
%%
% We next construct cost functional for the control problem.
symPsi = norm(sin(symThth.' - symThth),'fro');      % Sine distance for the periodic interval $[0,2pi]$.
symL_1 = 0.001*(symU.'*symU);               % Set the L^2 regularization for the control $u(t)$.
%
iCP_1 = OptimalControl(odeEqn,symPsi,symL_1);
%% Solve Gradient descent
tic
GradientMethod(iCP_1,'Graphs',true,'DescentAlgorithm',@ClassicalDescent)
toc
%% Visualization
% First, we present the dynamics without control,
[tspan, ThetaVector] = solve(odeEqn);
figure
plot(tspan',ThetaVector)
legend("\theta_"+[1:m])
ylabel('Phases [rad]')
xlabel('Time [sec]')
title('The dynamics without control (incoherence)')
%%
% and see the controled dynamics.
odec_1 = iCP_1.ode;
figure
plot(odec_1.tspan',odec_1.StateVector.Numeric(:,:))
legend("\theta_"+[1:m])
ylabel('Phases [rad]')
xlabel('Time [sec]')
title('The dynamics under control')

%%
% We also can plot the control function along time.
figure
Ufinal_1 = iCP_1.solution.UOptimal;
plot(odec_1.tspan',Ufinal_1)
legend("norm(u(t)) = "+norm(Ufinal_1))
ylabel('u(t)')
xlabel('Time [sec]')
title('The control function')
%% The problem with different regularization
% In this part, we change the regularization into L^1-norm and see the
% difference.

symL_2 = 0.001*abs(symU);
iCP_2 = OptimalControl(odeEqn,symPsi,symL_2);
% 
tic
GradientMethod(iCP_2,'Graphs',true,'DescentAlgorithm',@ClassicalDescent)
toc
%%
odec_2 = iCP_2.ode;
figure
plot(odec_2.tspan',odec_2.StateVector.Numeric(:,:))
legend("\theta_"+[1:m])
ylabel('Phases [rad]')
xlabel('Time [sec]')
title('The dynamics under control with different regularization')

%% 
Ufinal_2 = iCP_2.solution.UOptimal;
figure
plot(odec_1.tspan',Ufinal_1)
line(odec_2.tspan',Ufinal_2,'Color','red')

Thfinal_1 = odec_1.StateVector.Numeric(end,:);
Thfinal_2 = odec_2.StateVector.Numeric(end,:);
Psi_1 = norm(sin(Thfinal_1.' - Thfinal_1),'fro');
Psi_2 = norm(sin(Thfinal_2.' - Thfinal_2),'fro');

legend("u(t) with L^2-norm; Terminal cost = "+Psi_1,"u(t) with L^1-norm; Terminal cost = "+Psi_2)
ylabel('The coupling strength (\kappa+u(t))')
xlabel('Time [sec]')
title('The comparison between two different control cost functionals')

%%
% As one can expected from the regularization functions, the control function
% from $L^2$-norm acting more smoothly from 0 to the largest value. The
% function from $L^2$-norm draws much stiff lines.
