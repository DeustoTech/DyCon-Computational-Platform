function GetSymCrossDerivatives(iCP)
    idyn  = iCP.Dynamics;

    sY = idyn.StateVector.Symbolic;
    sU = idyn.Control.Symbolic;
    st = idyn.symt;
    %
    iFun = iCP.Functional;
    %
    dL_dU = iFun.LagrangeDerivatives.Control.Sym;
    dL_dY = iFun.LagrangeDerivatives.State.Sym;
    %
    d2L_dU2  = jacobian(dL_dU,sU);
    d2L_dU2  = matlabFunction(d2L_dU2,'Vars',{st,sY,sU});
    %
    d2L_dY2  = jacobian(dL_dY,sY);
    d2L_dY2  = matlabFunction(d2L_dY2,'Vars',{st,sY,sU});
    %
    d2L_dUdY = jacobian(dL_dU,sY);
    d2L_dUdY  = matlabFunction(d2L_dUdY,'Vars',{st,sY,sU});

    %
    dPsi_dY = iFun.TerminalCostDerivatives.State.Sym;
    d2Psi_dY2  = jacobian(dPsi_dY,sY);
    d2Psi_dY2  = matlabFunction(d2Psi_dY2,'Vars',{st,sY});

end


d2L_dU2   = iFun.LagrangeDerivatives.ControlControl.Num;
d2L_dY2   = iFun.LagrangeDerivatives.StateState.Num;
d2L_dUdY  = iFun.LagrangeDerivatives.StateControl.Num;
d2Psi_dY2 = iFun.TerminalCostDerivatives.StateState.Num;