%%
% Veamos un ejemplo de utilizacion de la clase ode. Para ello resolveremos
% un ejemplo sencillo. Sea la ode:
%%
% $$ \begin{bmatrix}
% \dot{y}_1 \\
% \dot{y}_2
% \end{bmatrix} = \left(\begin{array}{c} u_{1}+\sin\left(y_{1}\,y_{2}\right)+y_{1}\,y_{2}\\ u_{2}+y_{2}+\cos\left(y_{1}\,y_{2}\right) \end{array}\right)
% $$
%%
% $$ y_1(1) = 1 / / y_2(1) = -1 $$
%%
Y = sym('y',[2 1]);
U = sym('u',[2 1]);
%%
% Gracias a estas dos variables, podemos definir la ecuaci√≥n de la dinamica
% de la siguietne forma
%%
F = [ sin(Y(1)*Y(2)) +    (Y(1)*Y(2)) + U(1)   ; ...
         Y(2)        + cos(Y(1)*Y(2)) + U(2) ] ;
%
dynamics = ode(F,Y,U);
dynamics.Condition = [1,-1];
dynamics
%% 
% Se puede resolver las ecuaciones con una sola sentencia 
solve(dynamics)
plot(dynamics)
%%
% Crear problemas de condicion final, elegiendo el solver 
dynamics.Type = 'FinalCondition';
solve(dynamics,'RKMethod',@ode23)
plot(dynamics)
%% 
% Ademas de una interfaz mas sensilla para probemas lineales
A = [ -1 0 ; 0 -1];
B = [1 ; 1];
%
dynamics = ode('A',A,'B',B);
solve(lode)
plot(lode)